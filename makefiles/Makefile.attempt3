# FIELDS

NAME=maxchain
PATCHERS=chain.test.mxo
PROGVER=1.0

CC=clang

OUTPUTPATH=./build/$(NAME)/patchers

DEVELOPER_FOLDER=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer
SYS_SDK=$(DEVELOPER_FOLDER)/SDKs/MacOSX10.10.sdk

CFLAGS=-arch i386 -isysroot $(SYS_SDK) -mmacosx-version-min=10.9 -std=c99 

# API STUFF
FRAMEWORKS=$(HOME)/Library/Frameworks/
MAXMSPSDK=./max6-sdk
c74SUPPORT=$(MAXMSPSDK)/c74support
MAX_INCLUDES=$(c74SUPPORT)/max-includes
MSP_INCLUDES=$(c74SUPPORT)/msp-includes
JIT_INCLUDES=$(c74SUPPORT)/jit-includes

INCLUDE_FLAGS=-I$(MAX_INCLUDES) -I$(MSP_INCLUDES) -I$(JIT_INCLUDES) -I$(SYS_SDK) -I$(DEVELOPER_FOLDER)/Headers/FlatCarbon -I/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Headers/
FRAMEWORK_FLAGS=-F$(MAX_INCLUDES) -F$(MSP_INCLUDES) -framework MaxAPI -framework MaxAudioAPI
WARNING_FLAGS=-Wmost -Wno-four-char-constants -Wno-unknown-pragmas

# PLIST STUFF
COMPANY=edu.mit.media.resenv
BUNDLEPACKAGE=APPL
BUNDLESIGNATURE=????

BUNDLES=$(addprefix $(OUTPUTPATH)/,$(PATCHERS))
OBJECTS=$(addprefix ./src/,$(PATCHERS:.mxo=.o))

all: $(BUNDLES)

clean:
	rm -rf $(OUTPUTPATH)/*
	rm -f ./src/*.o

$(BUNDLES): %.mxo: $(OBJECTS)
	# Make bundle directories
	mkdir -p $@
	mkdir -p $@/Contents
	mkdir -p $@/Contents/MacOS
	# mkdir -p $@/Contents/Resources

	# Build executable
	$(CC) $(CFLAGS) $(FRAMEWORK_FLAGS) -bundle -o $@/Contents/MacOS/$(notdir $(basename $@)) ./src/$(basename $(notdir $@)).o

	# Add pkginfo
	touch $@/Contents/PkgInfo
	@echo -n "$(BUNDLEPACKAGE)$(BUNDLESIGNATURE)" > $@/Contents/PkgInfo
	
	# Add Info.plist
	touch $@/Contents/Info.plist
	@echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" >> $@/Contents/Info.plist
	@echo "<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> $@/Contents/Info.plist
	@echo "<plist version=\"1.0\">" >> $@/Contents/Info.plist
	@echo "<dict>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleDevelopmentRegion</key>" >> $@/Contents/Info.plist
	@echo "   <string>English</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleExecutable</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(notdir $(basename $@))</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleIconFile</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(ICONFILE)</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleName</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(notdir $(basename $@))</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleIdentifier</key>" >> $@/Contents/Info.plist
	@echo "   <string>com.$(COMPANY).$(PROGRAM)</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleInfoDictionaryVersion</key>" >> $@/Contents/Info.plist
	@echo "   <string>6.0</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundlePackageType</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(BUNDLEPACKAGE)</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleSignature</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(BUNDLESIGNATURE)</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleVersion</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(PROGVER)</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleShortVersionString</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(PROGVER)</string>" >> $@/Contents/Info.plist
	@echo "   <key>CFBundleGetInfoString</key>" >> $@/Contents/Info.plist
	@echo "   <string>$(notdir $(basename $@)), Version $(PROGVER), $(COMPANY)</string>" >> $@/Contents/Info.plist
	@echo "</dict>" >> $@/Contents/Info.plist
	@echo "</plist>" >> $@/Contents/Info.plist

$(OBJECTS): %.o: %.c
	$(CC) $(CFLAGS) $(INCLUDE_FLAGS) $(WARNING_FLAGS) -c -o $@ $<


# This copy the attached MaxAPI framework into the Library if it doesn't yet exist
$(MAXAPI): $(MAXINCLUDES)/MaxAPI.framework
	test -d $(MAXAPI) || cp -r $(MAXINCLUDES)/MaxAPI.framework $(FRAMEWORKS)

# This copy the attached MaxAudioAPI framework into the Library if it doesn't yet exist
$(MAXAUDIOAPI): $(MSPINCLUDES)/MaxAudioAPI.framework
	test -d $(MAXAUDIOAPI) || cp -r $(MSPINCLUDES)/MaxAudioAPI.framework $(FRAMEWORKS)
