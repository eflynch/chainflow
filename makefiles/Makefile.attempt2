# FIELDS

NAME=maxchain
PATCHERS=chain.test.mxo
PROGVER=1.0

CXX=clang
LANGUAGE=c

ARCH= -arch i386
OSVERSION=10.10

OUTPUTPATH=./build/$(NAME)/patchers

DEVELOPERFOLDER=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer

# API STUFF
ICONFILE=maxchain.icns

FRAMEWORKS=$(HOME)/Library/Frameworks/
MAXAPI=/Library/Frameworks/MaxAPI.framework
MAXAUDIOAPI=/Library/Frameworks/MaxAudioAPI.framework
MAXMSPSDK=./max6-sdk
c74SUPPORT=$(MAXMSPSDK)/c74support
MAXINCLUDES=$(c74SUPPORT)/max-includes
MSPINCLUDES=$(c74SUPPORT)/msp-includes
JITINCLUDES=$(c74SUPPORT)/jit-includes

# PLIST STUFF

WXCONFIG=wx-config

COMPANY=edu.mit.media.resenv
BUNDLEPACKAGE=APPL
BUNDLESIGNATURE=????


LIBS=`$(WXCONFIG) --inplace  --libs`
LINKERFLAGS= -lstdc
WARNINGFLAGS=
OPTFLAGS=
DEBUGFLAGS=

CPPINC=`$(WXCONFIG) --inplace --cxxflags`
LDFLAGS=$(LIBS) $(LINKERFLAGS)
CPPFLAGS=$(CPPINC) $(GCCFLAGS) $(DEBUGFLAGS) $(OPTFLAGS) $(WARNINGFLAGS)

# ACTUALLY DOING SOMETHING
BUNDLES=$(addprefix $(OUTPUTPATH)/,$(PATCHERS))
OBJECTS=$(addprefix ./src/,$(PATCHERS:.mxo=.o))

all: $(MAXAPI) $(MAXAUDIOAPI) $(BUNDLES)

clean:
    rm -rf $(OUTPUTPATH)/*
    rm -f ./src/*.o

help:
   @echo "Usage: make -f Makefile [all|clean|help]"

$(BUNDLES): %.mxo: $(OBJECTS)
    @echo "=== Building bundle directory structure ===="
    
    # Make bundle directories
    mkdir -p $@
    mkdir -p $@/Contents
    mkdir -p $@/Contents/MacOS
    mkdir -p $@/Contents/Resources

    # Build executable
    @echo "=== Building executable ===="
    ${CXX} $(ARCH) -bundle \
    -isysroot $(DEVELOPERFOLDER)/SDKs/MacOSX$(OSVERSION).sdk \
    -F$(MAXINCLUDES) \
    -F$(MSPINCLUDES) \
    -F$(JITINCLUDES) \
    -mmacosx-version-min=$(OSVERSION)  \
    -framework MaxAPI \
    -framework MaxAudioAPI \
    -o $@/Contents/MacOS/$(notdir $(basename $@)) ./src/$(basename $(notdir $@)).o
    
    # Add icon file
    cp -f $(ICONFILE) $@/Contents/Resources/$(ICONFILE)

    # Add pkginfo
    touch $@/Contents/PkgInfo
    @echo -n "$(BUNDLEPACKAGE)$(BUNDLESIGNATURE)" > $@/Contents/PkgInfo

    # Add Info.plist
    @echo "==== Creating Info.plist ===="
    touch $@/Contents/Info.plist
    @echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" >> $@/Contents/Info.plist
    @echo -n "<!DOCTYPE plist PUBLIC " >> $@/Contents/Info.plist
    @echo -n "\"-//Apple Computer//DTD PLIST 1.0//EN\" " >> $@/Contents/Info.plist
    @echo "\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> $@/Contents/Info.plist
    @echo "<plist version=\"1.0\">" >> $@/Contents/Info.plist
    @echo "<dict>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleDevelopmentRegion</key>" >> $@/Contents/Info.plist
    @echo "   <string>English</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleExecutable</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(MAXOBJECT)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleIconFile</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(ICONFILE)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleName</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(MAXOBJECT)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleIdentifier</key>" >> $@/Contents/Info.plist
    @echo "   <string>com.$(COMPANY).$(PROGRAM)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleInfoDictionaryVersion</key>" >> $@/Contents/Info.plist
    @echo "   <string>6.0</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundlePackageType</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(BUNDLEPACKAGE)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleSignature</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(BUNDLESIGNATURE)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleVersion</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(PROGVER)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleShortVersionString</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(PROGVER)</string>" >> $@/Contents/Info.plist
    @echo "   <key>CFBundleGetInfoString</key>" >> $@/Contents/Info.plist
    @echo "   <string>$(MAXOBJECT), Version $(PROGVER), $(COMPANY)</string>" >> $@/Contents/Info.plist
    @echo "</dict>" >> $@/Contents/Info.plist
    @echo "</plist>" >> $@/Contents/Info.plist
    @echo "\n"

$(OBJECTS): %.o: %.c
    @echo "==== Building object  ===="
    ${CXX} $(ARCH) $(CPPFLAGS) -x ${LANGUAGE} \
    -Wmost -Wno-four-char-constants -Wno-unknown-pragmas \
    -isysroot $(DEVELOPERFOLDER)/SDKs/MacOSX$(OSVERSION).sdk \
    -fmessage-length=0 -pipe -Wno-trigraphs -fpascal-strings -O0 \
    -I/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Headers/ \
    -I$(MAXINCLUDES) \
    -I$(MSPINCLUDES) \
    -I$(JITINCLUDES) \
    -I./lib/ \
    -include "$(MAXINCLUDES)/macho-prefix.pch" \
    -I$(DEVELOPERFOLDER)/SDKs/MacOSX$(OSVERSION).sdk \
    -I$(DEVELOPERFOLDER)/Headers/FlatCarbon \
    -fasm-blocks -mmacosx-version-min=$(OSVERSION) -gdwarf-2 \
    "-DDENORM_WANT_FIX = 1" \
    -c -o $@  $<
    @echo "\n"

# This copy the attached MaxAPI framework into the Library if it doesn't yet exist
$(MAXAPI): $(MAXINCLUDES)/MaxAPI.framework
    @echo "==== Copy MaxAPI.framework Check ===="
    test -d $(MAXAPI) || cp -r $(MAXINCLUDES)/MaxAPI.framework $(FRAMEWORKS)
    @echo "\n"

# This copy the attached MaxAudioAPI framework into the Library if it doesn't yet exist
$(MAXAUDIOAPI): $(MSPINCLUDES)/MaxAudioAPI.framework
    @echo "==== Copy MaxAudio.framework Check ===="
    test -d $(MAXAUDIOAPI) || cp -r $(MSPINCLUDES)/MaxAudioAPI.framework $(FRAMEWORKS)
    @echo "\n"
